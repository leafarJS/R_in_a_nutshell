bateo.2008 <- transform(batting.2008, AVG = H/AB)
str(bateo.2008)
bateo.nombre.2008 <- bateo.2008[bateo.2008$yearID == 2008]
bateo.nombre.2008 <- bateo.2008[bateo.2008$yearID == 2008,]
summary(bateo.nombre.2008)
summary(bateo.nombre.2008$yearID)
bateo.name.2008.short <- bateo.2008[bateo.2008$yearID == 2008, c("nameFirst", "nameLast", "AB", "H", "BB")]
bateo.name.2008.short
data <- load('data/batting.2008.rda')
bateo.2008 <- transform(batting.2008, AVG = H/AB)
str(bateo.2008)
bateo.w.names.2008 <- subset(bateo.2008, yearID == 2008)
bateo.w.names.2008
bateo.name.2008.short <-subset(bateo.2008, yearID == 2008, c("nameFirst", "AB", "H"))
bateo.name.2008.short
bateo.2008[sample(1:nrow(bateo.2008), 5), ]
bateo.2008[sample(1:nrow(bateo.2008), 5), ]
bateo.2008$teamID <- as.factor(bateo.2008$teamID)
levels(bateo.2008$teamID)
sample(levels(bateo.2008$teamID), 5)
bateo.2008.3teams <- bateo.2008[is.element(bateo.2008$teamID, sample(levels(bateo.2008$teamID),3)), ]
bateo.2008.3teams
summary(bateo.2008.3teams$teamID)
#tapply(x, INDEX, FUN = ..., simplify =)
data <- load('data/batting.2008.rda')
bateo.2008 <- transform(batting.2008, AVG = H/AB)
tapply(x=bateo.2008$HR, INDEX = list(bateo.2008$teamID), FUN = sum)
#tapply(x, INDEX, FUN = ..., simplify =)
data <- load('data/batting.2008.rda')
bateo.2008 <- transform(batting.2008, AVG = H/AB)
tapply(x=bateo.2008$HR, INDEX = list(bateo.2008$teamID), FUN = sum)
tapply(bateo.2008$HR, INDEX = list(bateo.2008$teamID), FUN = sum)
tapply((bateo.2008$H/bateo.2008$AB), INDEX = list(bateo.2008$lgID), FUN = fivenum)
tapply((bateo.2008$H/bateo.2008$AB), INDEX = list(bateo.2008$lgID), FUN = sevennum)
tapply((bateo.2008$H/bateo.2008$AB), INDEX = list(bateo.2008$lgID), FUN = sixnum)
tapply((bateo.2008$H/bateo.2008$AB), INDEX = list(bateo.2008$lgID), FUN = fivenum)
tapply((bateo.2008$H/bateo.2008$AB), INDEX = list(bateo.2008$lgID), FUN = cumsum(H))
tapply((bateo.2008$H/bateo.2008$AB), INDEX = list(bateo.2008$lgID), FUN = cumsum(bateo.2008$H))
tapply((bateo.2008$H/bateo.2008$AB), INDEX = list(bateo.2008$lgID), FUN = fivesum)
tapply((bateo.2008$H/bateo.2008$AB), INDEX = list(bateo.2008$lgID), FUN = fivenum)
bateo.nombre.2008 <- bateo.2008[bateo.2008$yearID == 2008,]
tapply(bateo.2008$HR, INDEX = list(bateo.nombre.2008$lgID, bateo.nombre.2008$bats), FUN = mean)
by(bateo.2008[, c("H", "2B", "3B", "HR")],
INDICES = list(bateo.nombre.2008$lgID, bateo.nombre.2008$bats), FUN = median)
by(bateo.2008[, c("H", "2B", "3B", "HR")],
INDICES = list(bateo.nombre.2008$lgID, bateo.nombre.2008$bats), FUN = median)
View(bateo.2008)
by(bateo.2008[, c("H", "X2B", "X3B", "HR")],
INDICES = list(bateo.nombre.2008$lgID, bateo.nombre.2008$bats), FUN = median)
by(bateo.2008[, c("H", "X2B", "X3B", "HR")],
INDICES = list(bateo.nombre.2008$lgID, bateo.nombre.2008$bats), FUN = mean)
by(bateo.2008[, c("H", "X2B", "X3B", "HR")],
INDICES = list(bateo.nombre.2008$lgID, bateo.nombre.2008$bats), FUN = mean, drop = FALSE)
by(bateo.2008[, c("H", "X2B", "X3B", "HR")],
INDICES = list(bateo.nombre.2008$lgID, bateo.nombre.2008$bats), FUN = mean, drop = FALSE)
by(bateo.2008[, c("H", "X2B", "X3B", "HR")],
INDICES = list(bateo.nombre.2008$lgID, bateo.nombre.2008$bats), FUN = mean, drop = TRUE)
by(bateo.2008[, c("H", "X2B", "X3B", "HR")],
INDICES = list(bateo.nombre.2008$lgID, bateo.nombre.2008$bats), FUN = mean)
by(bateo.2008[, c("H", "X2B", "X3B", "HR")],
INDICES = list(bateo.nombre.2008$lgID, bateo.nombre.2008$bats), FUN = mean)
by(bateo.2008[, c("H", "X2B", "X3B", "HR")],
INDICES = list(bateo.nombre.2008$lgID, bateo.nombre.2008$bats), FUN = sum)
by(bateo.2008[, c("H","HR")],
INDICES = list(bateo.nombre.2008$lgID, bateo.nombre.2008$bats), FUN = sum)
by(bateo.2008[, c("HR")],
INDICES = list(bateo.nombre.2008$lgID, bateo.nombre.2008$bats), FUN = sum)
by(bateo.2008[, c("H", "X2B", "X3B", "HR")],
INDICES=list(bateo.nombre.2008$lgID,
bateo.nombre.2008$bats), FUN=mean)
by(bateo.2008[, c("H","HR")],
INDICES=list(bateo.nombre.2008$lgID,
bateo.nombre.2008$bats), FUN=mean)
by(bateo.2008[, c("H","HR")],
INDICES=list(bateo.nombre.2008$lgID,
bateo.nombre.2008$bats), FUN=sum)
by(bateo.2008[, c("HR", "H")],
INDICES = list(bateo.nombre.2008$lgID, bateo.nombre.2008$bats), FUN = sum)
aggregate(bateo.2008[, c("AB", "H", "HR")],
by = list(bateo.2008$teamID), FUN = sum)
aggregate(bateo.2008[, c("AB", "H","BB", "HR")],
by = list(bateo.2008$teamID), FUN = sum)
aggregate(bateo.2008[, c("AB", "H","BB", "X2B", "X3B" "HR")],
aggregate(bateo.2008[, c("AB", "H","BB", "x2B", "x3B" "HR")],
#aggregate(x, nfrequency = 1, FUN = sum, ndeltat = 1, ts.eps = getOption("ts.eps"), ...)
str(bateo.2008)
aggregate(bateo.2008[, c("AB", "H","BB", "X2B", "X3B" "HR")],
aggregate(bateo.2008[, c("AB", "H","BB", "X2B", "X3B","HR")],
by = list(bateo.2008$teamID), FUN = sum)
by(bateo.2008[, c("H","BB", "X2B", "X3B","HR")],
INDICES = list(bateo.nombre.2008$lgID, bateo.nombre.2008$bats), FUN = sum)
by(bateo.2008[, c("H","BB", "X2B", "X3B","HR")],
INDICES = list(bateo.nombre.2008$lgID, bateo.nombre.2008$bats), FUN = mean)
by(bateo.2008[, c("H","BB", "X2B", "X3B","HR")],
INDICES = list(bateo.nombre.2008$lgID, bateo.nombre.2008$bats), FUN = sum)
rowsum(bateo.2008[, c("AB", "H","BB", "X2B", "X3B","HR")],
group = bateo.2008$teamID)
HR.count <- tabulate(bateo.nombre.2008$HR)
HR.count
# tabulate doesn't label results, so let's add names:
names(HR.count) <- 0:(length(HR.count)-1)
HR.count
table(bateo.nombre.2008$bats)
table(bateo.2008[, c("bats", "throws")])
# La función xtabs funciona igual que la tabla, pero le permite especificar las agrupaciones
# especificando una fórmula y un marco de datos. En muchos casos, esto puede ahorrarle algo de tipeo.
xtabs(~bats+lgID, bateo.2008)
# first, add batting average to the data frame:
bateo.w.names.2008 <- transform('data/batting.2008.rda', AVG = H/AB)
# first, add batting average to the data frame:
bateo.w.names.2008 <- transform(bateo.2008, AVG = H/AB)
#now, select a subset of players with over 100 AB (for some statistical significate)
bateo.2008.over100AB <- subset(bateo.2008, subset = (AB > 100 ))
#Finally, split the results into 10 bins
bateo.2008.bins <- cut(bateo.2008.over100AB$AVG, breaks = 10)
table(bateo.2008.bins)
data <- load('data/batting.2008.rda')
bateo.2008 <- transform(batting.2008, AVG = H/AB)
View(bateo.2008)
m <- matrix(1:10 nrow = 5)
m
m <- matrix(1:10, nrow = 5)
m
t(m)
v <- 1:10
v
t(v)
my.tickers <- c("GE", "GOOG", "AAPL", "AXP", "GS")
my.quotes <- get.multiple.quotes(my.tickers,
from = as.Date("2009-01-01"),
to = as.Date("2009-03-31"),
interval = m)
?get.multiple.quotes
??get.multiple.quotes
w <- c(5,4,7,2,7,1)
w
sort(w)
sort(w, decreasing = TRUE)
length(w)
length(w) <- 7
w
sort(w)
sort(w, na.last = TRUE)
sort(w, na.last = FALSE)
v <- c(11,12,13,14,15)
order(v)
v[order(v)]
u <- c("pig", "cow", "duck", "horse", "rat")
w <- data.frame(v, u)
w
w[order(w$v)]
w[order(w$v),]
w
w[order(w$v),]
data <- load('data/toxins.and.cancer.rda')
View(toxins.and.cancer)
data <- load('data/toxins.and.cancer.rda')
data.1 <- transform(data, NT = new_total * 1)
View(data.1)
data <- load('data/toxins.and.cancer.rda')
data.1 <- transform(toxins.and.cancer, NT = new_total * 1)
View(data.1)
str(data.1)
attach(data.1)
plot(total_toxic_chemicals/Surface_Area, deaths_total/Population)
plot(air_on_site/Surface_Area, deaths_lung/Population)
locator(1)
locator(1)
plot(total_toxic_chemicals/Surface_Area, deaths_total/Population)
locator(1)
plot(air_on_site/Surface_Area, deaths_lung/Population)
identity(air_on_site/Surface_Area,
deaths_lung/Population,
State_Abbrev)
plot(total_toxic_chemicals/Surface_Area, deaths_total/Population)
plot(air_on_site/Surface_Area, deaths_lung/Population)
locator(1)
identity(air_on_site/Surface_Area,
deaths_lung/Population,
State_Abbrev)
identity(air_on_site/Surface_Area,
deaths_lung/Population,
State_Abbrev)
plot(air_on_site/Surface_Area, deaths_lung/Population)
locator(1)
identity(air_on_site/Surface_Area,
deaths_lung/Population,
State_Abbrev)
plot(air_on_site/Surface_Area, deaths_lung/Population,
xlab = "Air Release Rate of Toxic Chemicals",
ylab = "Lung Cancer Death Rate")
text(air_on_site/Surface_Area, deaths_lung/Population,
labels = State_Abbrev,
cex = 0.5,
adj = c(0,-1))
nutshell.data <- load('data/batting.2008.rda')
bateo.2008 <- transform(batting.2008, AVG = H/AB)
View(bateo.2008)
str(bateo.2008)
pairs(bateo.2008[bateo.2008$AB > 100, c("H","R","SO","BB","HR")])
nutshell.data.1 <- load('data/turkey.price.ts.rda')
View(nutshell.data.1)
data(nutshell.data.1)
plot(nutshell.data.1)
load("C:/Users/Administrador/Desktop/R_in_a_Nutshell/data/turkey.price.ts.rda")
plot(nutshell.data.1)
head(nut)
head(nutshell.data.1)
head(nutshell.data.1, 6)
load("C:/Users/Administrador/Desktop/R_in_a_Nutshell/data/turkey.price.ts.rda")
head(turkey.price.ts)
plot(turkey.price.ts)
acf(turkey.price.ts)
# BAR CHARTS
data <-load('data/doctorates.rda')
View(doctorates)
class(data)
doc.degrees <- transform(doctorates, x = year * 1)
class(doc.degrees)
View(doc.degrees)
head(doc.degrees,3)
str(doc.degrees)
doc.degrees.m <- as.matrix(doctorates[2:7])
rownames(doc.degrees.m) <- doctorates[,1]
doc.degrees.m
barplot(doc.degrees.m[1,])
barplot(doc.degrees[1,])
data <-load('data/doctorates.rda')
doc.degrees.m <- as.matrix(doctorates[2:7])
rownames(doc.degrees.m) <- doctorates[,1]
doc.degrees.m
barplot(doc.degrees.m[1,])
barplot(doc.degrees.m,
beside = TRUE,
horiz = TRUE,
legend = TRUE,
cex.names = .75)
barplot(doc.degrees.m,
beside = TRUE,
horiz = TRUE,
legend = TRUE,
cex.names = .75)
barplot(doc.degrees.m,
beside = TRUE,
horiz = TRUE,
legend = TRUE,
cex.names = .25)
barplot(doc.degrees.m,
beside = TRUE,
horiz = TRUE,
legend = TRUE,
cex.names = .75)
barplot(doc.degrees.m,
beside = TRUE,
horiz = TRUE,
legend = FALSE,
cex.names = .75)
barplot(t(doc.degrees.m),
legend = TRUE,
ylim = c(0,66000))
barplot(t(doc.degrees.m),
legend = TRUE,
ylim = c(0,66000))
barplot(t(doc.degrees.m),
legend = TRUE,
ylim = c(0,66000))
barplot(t(doc.degrees.m),
legend = FALSE, #true
ylim = c(0,66000))
# units are millions of pound of live fish
domestic.catch.2006 <- c(7752,1166,463,108)
names(domestic.catch.2006)<- c("Fresh and frozen", "Reducen to meal, oil, etc.", "Canned", "Cured")
# note: cex.6 setting shrinks text size by 40% so you can see the labels
pie(domestic.catch.2006, init.angle = 100, cex = .6)
load("C:/Users/Administrador/Desktop/R_in_a_Nutshell/data/batting.2008.rda")
bateo.names.2008 <- transform(batting.2008,
AVG = H/AB,
bats = as.factor(bats),
throws = as.factor(throws))
cdplot(bats~AVG,
bateo.names.2008,
subset = (bateo.names.2008$AB > 100))
mosaicplot(bats~throws,
bateo.names.2008,
color = TRUE)
mosaicplot(bats~throws,
bateo.names.2008,
color = TRUE)
dev.off()
mosaicplot(bats~throws,
bateo.names.2008,
color = TRUE)
spineplot(bats~throws,
bateo.names.2008)
assocplot(table(bateo.names.2008$bats, bateo.names.2008$throws),
xlab = "Throws",
ylab = "Bats")
load("C:/Users/Administrador/Desktop/R_in_a_Nutshell/data/yosemite.rda")
# argumentos, descripción, por defecto
# página 257
data(yasemite)
# argumentos, descripción, por defecto
# página 257
data<- load('data/yosemite.rda')
dim(data)
View(yosemite)
yosemite <- transform(yosemite, x = V1 *1)
data<- load('data/yosemite.rda')
yosemite
dim(yosemite)
yosemite.flipped <- yosemite[, seq(from=253, to= 1)]
str(yosemite.flipped)
head(yosemite.flipped)
head(yosemite.flipped,3)
View(yosemite.flipped)
yosemite.rightmost <- yosemite[nrow(yosemite) - ncol(yosemite) + 1,]
halfdome <- yosemite[(nrow(yosemite) - ncol(yosemite) + 1):562,
seq(from=253, to=1)]
persp(halfdome,
col = "green",
border = NA,
expand = .15,
theta = 225,
phi = 20,
ltheta = 45,
lphi = 20,
shade = .75)
image(yosemite,
asp=253/562,
ylim = c(1,0),
col = sapply((0:32)/32, gray))
contour(yosemite,
asp=253/562,
ylim = c(1,0))
load("C:/Users/Administrador/Desktop/R_in_a_Nutshell/data/batting.2008.rda")
# Plotting Distributions
# Trazado de Distribuciones
bateo.2008 <- transform(batting.2008, PA = AB+BB+HPB+SF+SH)
View(batting.2008)
# Plotting Distributions
# Trazado de Distribuciones
bateo.2008 <- transform(batting.2008, PA = AB+BB+HBP+SF+SH)
View(bateo.2008)
hist(bateo.2008$PA)
hist(bateo.2008[bateo.2008$PA > 25, "PA"],
breaks = 50,
cex.main = .8)
plot(density(bateo.2008[bateo.2008$PA > 25, "PA"]))
rug(bateo.2008[bateo.2008$PA > 25, "PA"])
boxplot(x, ..., range = 1.5, width = NULL, varwidth = FALSE,
notch = FALSE, outline = TRUE, names, plot = TRUE,
border = par("fg"), col = NULL, log = "",
pars = list(boxwex = 0.8, staplewex = 0.5, outwex = 0.5),
horizontal = FALSE, add = FALSE, at = NULL)
load("C:/Users/Administrador/Desktop/R_in_a_Nutshell/data/batting.2008.rda")
bateo.2008 <- transform(batting.2008,
OBP = (H+BB+HBP)/(AB+BB+HBP+SF))
View(batting.2008)
View(bateo.2008)
# argumentos, descripción, por defecto
# página 267
bateo.2008 <- transform(batting.2008, PA = AB+BB+HBP+SF+SH)
bateo.2008 <- transform(batting.2008,
OBP = (H+BB+HBP)/(AB+BB+HBP+SF))
# argumentos, descripción, por defecto
# página 267
bateo.2008 <- transform(batting.2008, PA = AB+BB+HBP+SF+SH)
bateo.2008 <- transform(batting.2008,
OBP = (H+BB+HBP)/(AB+BB+HBP+SF))
load("C:/Users/Administrador/Desktop/R_in_a_Nutshell/data/batting.2008.rda")
# argumentos, descripción, por defecto
# página 267
bateo.2008 <- transform(batting.2008, PA = AB+BB+HBP+SF+SH)
View(bateo.2008)
bateo.2008 <- transform(batting.2008, OBP = (H+BB+HBP)/(AB+BB+HBP+SF))
View(bateo.2008)
qqnorm(bateo.2008$AB)
boxplot(OBP~teamID,
data = bateo.2008[bateo.2008$OBP > 100 & bateo.2008$lgID == "AL", ],
cex.axis = .7)
bateo.2008 <- transform(batting.2008, OBP = (H+BB+HBP)/(AB+BB+HBP+SF))
View(bateo.2008)
boxplot(OBP~teamID,
data = bateo.2008[bateo.2008$OBP > 100 & bateo.2008$lgID == "AL", ],
cex.axis = .7)
bateo.2008 <- transform(batting.2008, OBP = (H+BB+HBP)/(AB+BB+HBP+SF))
bateo.2008.PA = AB+BB+HBP+SF+SH
attach(bateo.2008)
bateo.2008.PA = AB+BB+HBP+SF+SH
boxplot(OBP~teamID,
data = bateo.2008[bateo.2008$OBP > 100 & bateo.2008$lgID == "AL", ],
cex.axis = .7)
View(bateo.2008)
bateo.2008 <- transform(batting.2008, OBP = (H+BB+HBP)/(AB+BB+HBP+SF))
attach(bateo.2008)
bateo.2008$PA = AB+BB+HBP+SF+SH
View(bateo.2008)
boxplot(OBP~teamID,
data = bateo.2008[bateo.2008$OBP > 100 & bateo.2008$lgID == "AL", ],
cex.axis = .7)
bateo.2008 <- transform(batting.2008, OBP = (H+BB+HBP)/(AB+BB+HBP+SF))
attach(bateo.2008)
bateo.2008$PA = AB+BB+HBP+SF+SH
View(bateo.2008)
boxplot(OBP~teamID,
data=bateo.2008[bateo.2008$PA>100 & bateo.2008$lgID=="AL",],
cex.axis=.7)
load("C:/Users/Administrador/Desktop/R_in_a_Nutshell/data/toxins.and.cancer.rda")
png("scatter.1.pdf",
width = 4.3,
height = 4.3,
units = "in",
res = 72)
attach(toxins.and.cancer)
plot(total_toxic_chemicals/Surface_Area, deaths_total/Population)
dev.off()
plot(total_toxic_chemicals/Surface_Area, deaths_total/Population)
png("scatter.1.png",
width = 4.3,
height = 4.3,
units = "in",
res = 72)
attach(toxins.and.cancer)
plot(total_toxic_
png("scatter.1.png",
png("scatter.1.pdf",
width = 4.3,
height = 4.3,
units = "in",
res = 72)
attach(toxins.and.cancer)
plot(total_toxic_chemicals/Surface_Area, deaths_total/Population)
png("scatter.2.pdf",
width = 4.3,
height = 4.3,
units = "in",
res = 72)
attach(toxins.and.cancer)
plot(total_toxic_chemicals/Surface_Area, deaths_total/Population)
dev.off()
View(toxins.and.cancer)
png("scatter.3.pdf",
width = 4.3,
height = 4.3,
units = "in",
res = 72)
tox.can <- transform(toxins.and.cancer, x =air_on_site * 1)
attach(tox.can)
plot(total_toxic_chemicals/Surface_Area, deaths_total/Population)
dev.off()
# GRAPHICS DEVICES
par(mfcol = c(3,2))
# GRAPHICS DEVICES
d <-par(mfcol = c(3,2))
d
par(mfcol = c(3,2))
png("C:/Users/Administrador/Desktop/R_in_a_Nutshell/multiple.fig.pdf",
width = 4.3,
height = 6.5,
units = "in",
res = 72)
par(mfcol = c(3,2))
pie(c(5,4,3))
plot(x=c(1,2,3,4,5), y=c(1.1,1.9,3,3.9,6))
barplot(c(1,2,3,4,5))
barplot(c(5,4,3,2,1), horiz = TRUE)
pie(c(50,40,30,20,10))
plot(c(1,2,3,4,5,6), c()4,3,6,2,1,1)
png("C:/Users/Administrador/Desktop/R_in_a_Nutshell/multiple.fig.pdf",
width = 4.3,
height = 6.5,
units = "in",
res = 72)
par(mfcol = c(3,2))
pie(c(5,4,3))
plot(x=c(1,2,3,4,5), y=c(1.1,1.9,3,3.9,6))
barplot(c(1,2,3,4,5))
barplot(c(5,4,3,2,1), horiz = TRUE)
pie(c(50,40,30,20,10))
plot(c(1,2,3,4,5,6), c(4,3,6,2,1,1))
dev.off()
#draw a simple plot as a background
plot(x=c(0,10), y=c(11,21))
#draw a simple plot as a background
plot(x=c(0,10), y=c(0,10))
#draw a simple plot as a background
plot(x=c(0,10), y=c(0,10))
# plot a horizontal line at y = 4
abline(h=4)
# plot a vertical line at x = 3
abline(v = 3)
# plot a line with a y-intercept of 1 and slope of 1
abline(a=1, b=1)
#plot a line with a y-intecept of 10 and slope of -1
#but this time, use the coef argument:
abline(coef = c(10,-1))
#plot a grid of lines between 1 to 10:
abline(h=1:10, v=1:10)
#draw a simple plot as a background
plot(x=c(0,10), y=c(0,10))
# plot a horizontal line at y = 4
abline(h=4)
# plot a vertical line at x = 3
abline(v = 3)
# plot a line with a y-intercept of 1 and slope of 1
abline(a=1, b=1)
#plot a line with a y-intecept of 10 and slope of -1
#but this time, use the coef argument:
abline(coef = c(10,-1))
#plot a grid of lines between 1 to 10:
abline(h=1:10, v=1:10)
polygon(x = c(2,2,4,4), y=c(2,4,4,2))
