return(x^2 + 3)
}
f.6(30)
f.6 <- function(x) {
return(x^2 + 3)
}
f.6(30)
f.7 <- function(x) {
x^2 + 3
}
f.7(30)
x <- 1:10
sapply(x, sqrt)
sapply(x, sqrt, digits = 2)
sapply(x, sqrt)
apply.to.three <- function(f){f(3)}
apply.to.three(function(x){x ** 7})
x <- c(1,2,3,4,5,6,7,8,9,10)
sapply(x, function(x){x + 1})
v <- 1:20
w <- NULL
for (i in 1:length(v)) {
w[i] <- v[i]^2
}
w
v <- 1:20
w <- sapply(v, function(i){i^2})
w
(function(x){x + 1})(100)
(function(x){sqrt(x) + exp(2) - 1})(100)
args(sin)
function(x)
args('?')
args(args)
args(lm)
f.8 <- function(x, y=1, z=2) {x + y +z}
f.formals <- formals(f.8)
f.formals
f.formals$x <- 1000
formals(f.8) <- f.formals
args(f.8)
f.9 <- function(x = 100, y = 200, z = 300){
return(x + y + z)
}
f.9
body(f.9)
body(f.9) <- expresssion({ x * y * z})
body(f.9)
body(f.9) <- expresssion({ x * y * z})
body(f.9) <- expresssion({ x * y * z})
body(f.9) <- expression({ x * y * z})
f.9
add.the.log <- function(first, second){
first + log(second)
}
add.the.log(second = sqrt(10), first = exp(10))
add.the.log(second = 1 , f.9)
add.the.log(second = 1 , first = f.9)
add.the.log(second = sqrt(10), first = exp(10))
add.the.log(s = sqrt(10), f = exp(10))
add.the.log(sqrt(10),exp(10))
add.the.log(second = sqrt(10), first = exp(10))
add.the.log(s = sqrt(10), f = exp(10))
add.the.log(sqrt(10), exp(10))
add.the.log(exp(10), sqrt(10))
f.10 <- function(arg1=10, arg2=20){
print(paste("arg1:", arg1))
print(paste("arg2:", arg2))
}
f.10(arg = 1000)
f.10(arg1 = 1000)
f.10(arg1 = 2000, arg2 = 3000)
f.10()
#CHANGES TO OTHER ENVIRONMENTS
X
x #Error: object 'X' not found
doesnt.assing.x <-function(i){x <- i}
doesnt.assing.x(4)
x #Error: object 'X' not found
doesnt.assing.x <-function(i){x <- i}
doesnt.assing.x(4)
assigns.x <-function(i){x <<- i}
assigns.x(1000)
x
setClass("Time.series",
representation(
data = "numeric",
start = "POSIXct",
end = "POSIXct"
))
my.time.serie <- new("Time.series",
data = c(1,2,3,4,5,6),
start.as.POSIXct("12/10/2022 0:00:00",
tz = "GMT",
format = "%m/%d/%Y %H:%M%S"),
end = as.POSIXct("13/10/2022 11:10:05",
tz = "GMT",
format = "%m/%d/%Y %H:%M:%S")
)
setClass("Time.series",
representation(
data = "numeric",
start = "POSIXct",
end = "POSIXct"
))
my.time.serie <- new("Time.series",
data = c(1,2,3,4,5,6),
start = as.POSIXct("12/10/2022 0:00:00",
tz = "GMT",
format = "%m/%d/%Y %H:%M%S"),
end = as.POSIXct("13/10/2022 11:10:05",
tz = "GMT",
format = "%m/%d/%Y %H:%M:%S")
)
my.time.serie
setClass("Time.series",
representation(
data = "numeric",
start = "POSIXct",
end = "POSIXct"
))
my.time.serie <- new("Time.series",
data = c(1,2,3,4,5,6),
start = as.POSIXct("12/10/2022 0:00:00",
tz = "GMT",
format = "m/%d/%Y %H:%M:%S"),
end = as.POSIXct("13/10/2022 11:10:05",
tz = "GMT",
format = "m/%d/%Y %H:%M:%S")
)
my.time.serie
setClass("Time.series",
representation(
data = "numeric",
start = "POSIXct",
end = "POSIXct"
))
my.time.serie <- new("Time.series",
data = c(1,2,3,4,5,6),
start = as.POSIXct("13/10/2022 0:00:00",
tz = "GMT",
format = "m/%d/%Y %H:%M:%S"),
end = as.POSIXct("13/10/2022 11:10:05",
tz = "GMT",
format = "m/%d/%Y %H:%M:%S")
)
my.time.serie
setClass("TimeSeries",
+ representation(
+ data="numeric",
setClass("TimeSeries",
representation(
data="numeric",
start="POSIXct",
end="POSIXct"
))
my.TimeSeries <- new("TimeSeries",
data=c(1, 2, 3, 4, 5, 6),
start=as.POSIXct("07/01/2009 0:00:00", tz="GMT",
format="%m/%d/%Y %H:%M:%S"),
end=as.POSIXct("07/01/2009 0:05:00", tz="GMT",
format="%m/%d/%Y %H:%M:%S")
)
my.TimeSeries
setClass("Time.series",
representation(
data = "numeric",
start = "POSIXct",
end = "POSIXct"
))
my.time.serie <- new("Time.series",
data = c(1,2,3,4,5,6),
start=as.POSIXct("13/10/2022 0:00:00",
tz = "GMT",
format = "m/%d/%Y %H:%M:%S"),
end = as.POSIXct("13/10/2022 11:10:05",
tz = "GMT",
format = "m/%d/%Y %H:%M:%S")
)
my.time.serie
setClass("TimeSeries",
representation(
data="numeric",
start="POSIXct",
end="POSIXct"
))
my.TimeSeries <- new("TimeSeries",
data=c(1, 2, 3, 4, 5, 6),
start=as.POSIXct("07/01/2009 0:00:00", tz="GMT",
format="%m/%d/%Y %H:%M:%S"),
end=as.POSIXct("07/01/2009 0:05:00", tz="GMT",
format="%m/%d/%Y %H:%M:%S")
)
my.TimeSeries
setClass("Time.series",
representation(
data = "numeric",
start = "POSIXct",
end = "POSIXct"
))
my.time.serie <- new("Time.series",
data = c(1,2,3,4,5,6),
start=as.POSIXct("07/01/2009 0:00:00", tz="GMT",
format="%m/%d/%Y %H:%M:%S"),
end=as.POSIXct("07/01/2009 0:05:00", tz="GMT",
format="%m/%d/%Y %H:%M:%S")
)
my.time.serie
setClass("TimeSeries",
representation(
data="numeric",
start="POSIXct",
end="POSIXct"
))
my.TimeSeries <- new("TimeSeries",
data=c(1, 2, 3, 4, 5, 6),
start=as.POSIXct("07/01/2009 0:00:00", tz="GMT",
format="%m/%d/%Y %H:%M:%S"),
end=as.POSIXct("07/01/2009 0:05:00", tz="GMT",
format="%m/%d/%Y %H:%M:%S")
)
my.TimeSeries
validObject(my.TimeSeries)
my.ts <- ts(data = c(1,2,3,4,5), start = (2009,2), frequency=12)
my.ts
my.ts <- ts(data = c(1,2,3,4,5), start = (2009,2), frequency=12)
attributes(my.ts)
my.ts <- ts(data=c(1, 2, 3, 4, 5), start=c(2009, 2), frequency=12)
my.ts
attributes(my.ts)
typeof(my.ts)
unclass(my.ts)
plot(my.ts)
salarios = c(15000,18000,20000,12000,45200)
posicion = c("Q4", "Q3", "Q2", "Q1", "Q5")
equipo = c("colts", "patriots", "panthers", "bengals", "giants")
nombre = c("jorge", "rafael", "miguel", "angel", "luis")
apellido = c("callejo", "flores", "guisbert", "tarqui", "linares")
top.5.salarios <- data.frame(nombre, apellido, equipo posicion, salarios)
salarios = c(15000,18000,20000,12000,45200)
posicion = c("Q4", "Q3", "Q2", "Q1", "Q5")
equipo = c("colts", "patriots", "panthers", "bengals", "giants")
nombre = c("jorge", "rafael", "miguel", "angel", "luis")
apellido = c("callejo", "flores", "guisbert", "tarqui", "linares")
top.5.salarios <- data.frame(nombre, apellido, equipo, posicion, salarios)
top.5.salarios
top.5.salarios <- edit(top.5.salarios)
fix(top.5.salarios)
View(top.5.salarios)
save(top.5.salarios, file = "/top.5.salarios.RData")
save(top.5.salarios,
file = "C:/Users/Administrador/Desktop/R_in_a_Nutshell/top.5.salarios.RData"
)
load("~/top.5.salarios.RData")
load("~/top.5.salarios.RData")
load("~/top.5.salarios.RData", useBytes = TRUE)
save(top.5.salarios, file = "~/top.5.salarios.RData")
save(top.5.salarios,
file = "C:/Users/Administrador/Desktop/R_in_a_Nutshell/top.5.salarios.RData"
)
load("~/top.5.salarios.RData", useBytes = TRUE)
save(top.5.salarios, file = "~/top.5.salarios.RData")
save(top.5.salarios,
file = "C:/Users/Administrador/Desktop/R_in_a_Nutshell/top.5.salarios_1.RData"
)
load("~/top.5.salarios.RData", useBytes = TRUE)
load("~/top.5.salarios.RData")
#IMPORTING DATA FROM EXTERNAL FILES
acc.apple = read.table("data/AAPL.csv",
header = TRUE, sep = ",",
quote = "\"")
acc.apple
data.url = read.csv("http://ichart.finance.yahoo.com/table.csv
?s=%5EGSPC&a=01&b=1&c=1999&d=12&e=12&f=2022&g=m&ignore=.csv")
data.url = read.csv(paste("http://ichart.finance.yahoo.com/table.csv
?s=%5EGSPC&a=01&b=1&c=1999&d=12&e=12&f=2022&g=m&ignore=.csv", sep=""))
sp500 <- read.csv(paste("http://ichart.finance.yahoo.com/table.csv?",
"s=%5EGSPC&a=03&b=1&c=1999&d=03&e=1&f=2009&g=m&ignore=.csv", sep=""))
data.url = read.table("http://ichart.finance.yahoo.com/table.csv
?s=%5EGSPC&a=01&b=1&c=1999&d=12&e=12&f=2022&g=m&ignore=.csv", sep="")
data.url = read.table("http://ichart.finance.yahoo.com/table.csv
?s=%5EGSPC&a=01&b=1&c=1999&d=12&e=12&f=2022&g=m&ignore=.csv",
header = TRUE, sep = ",",
quote = "\"")
sample <- read.table("http://aprender.uib.es/Rdir/pearson.txt", header=TRUE, quote="\"")
View(sample)
data.url = read.table("http://ichart.finance.yahoo.com/table.csv
?s=%5EGSPC&a=01&b=1&c=1999&d=12&e=12&f=2022&g=m&ignore=.csv.",
header = TRUE, sep = ",",
quote = "\"")
data.url = read.table(:URL "http://ichart.finance.yahoo.com/table.csv
data.url = read.table(URL, "http://ichart.finance.yahoo.com/table.csv
?s=%5EGSPC&a=01&b=1&c=1999&d=12&e=12&f=2022&g=m&ignore=.csv.",
header = TRUE, sep = ",",
quote = "\"")
data.url = read.table(URL, "http://ichart.finance.yahoo.com/table.csv
?s=%5EGSPC&a=01&b=1&c=1999&d=12&e=12&f=2022&g=m&ignore=.csv",
header = TRUE, sep = ",",
quote = "\"")
data.url = read.table2(URL, "http://ichart.finance.yahoo.com/table.csv
?s=%5EGSPC&a=01&b=1&c=1999&d=12&e=12&f=2022&g=m&ignore=.csv",
header = TRUE, sep = ",",
quote = "\"")
data.url = read.table2("http://ichart.finance.yahoo.com/table.csv
?s=%5EGSPC&a=01&b=1&c=1999&d=12&e=12&f=2022&g=m&ignore=.csv",
header = TRUE, sep = ",",
quote = "\"")
data.url <- read.table("http://aprender.uib.es/Rdir/pearson.txt", header=TRUE, quote="\"")
data.url
class(data.url)
View(data.url)
install.packages("RODBC")
#install.packages("RODBC")
library(RODBC)
bbdd <- odbcConnect("bbdb")
bbdd <- odbcDriverConnect("DSN=bbdb")
bbdd <- odbcDriverConnect("DSN=bbdb")
odbcGetInfo(bbdb)
bbdd <- odbcConnect("bbdb")
odbcGetInfo(bbdb)
x <- c("a", "b", "c", "d", "e")
y <- c("A", "B", "C", "D", "E")
paste(x, y)
paste(x, y , sep = "-")
paste(x,y, sep = "-", collapse = "#")
top.5.salaries <- load("~/top.5.salarios.RData")
view(top.5.salaries)
View(top.5.salarios)
top.5.salaries
top.5.salaries <- load("~/top.5.salarios.RData")
top.5.salaries
load("~/top.5.salarios.RData")
top.5.salaries <- load("top.5.salarios.RData")
top.5.salaries
View(top.5.salaries)
View(top.5.salarios)
top.5.salaries <- read.csv("top.5.salarios.RData")
top.5.salaries
View(top.5.salaries)
top.5.salaries <- read.dcf("top.5.salarios.RData")
top.5.salaries
View(top.5.salaries)
top.5.salaries <- read.table("top.5.salarios.RData")
top.5.salaries
View(top.5.salaries)
top.5.salaries <- read.ftable("top.5.salarios.RData")
top.5.salaries
View(top.5.salaries)
top.5.salaries <- load("top.5.salarios.RData")
top.5.salaries
View(top.5.salaries)
year <- c(2008,2008,2008,2008,2022)
rank <- c(1,2,3,4,5)
more.cols <- data.frame(year, rank)
cbind(top.5.salaries, more.cols)
top.5.salaries <- readRDS("top.5.salarios.RData")
top.5.salaries <- readRDS("top.5.salarios.RData")
top.5.salaries
View(top.5.salarios)
cbind(top.5.salaries, mo
cbind(top.5.salaries, mo
top.5.salaries <- readRDS("top.5.salarios.RData")
top.5.salaries <- data("top.5.salarios.RData")
top.5.salaries
year <- c(2008,2008,2008,2008,2022)
rank <- c(1,2,3,4,5)
more.cols <- data.frame(year, rank)
cbind(top.5.salaries, more.cols)
View(top.5.salaries)
load("C:/Users/Administrador/Desktop/R_in_a_Nutshell/top.5.salarios.RData")
top.5.salaries <- load("./data/top.5.salarios.RData")
top.5.salaries <- load("./data/top.5.salarios.RData")
year <- c(2008,2008,2008,2008,2022)
rank <- c(1,2,3,4,5)
more.cols <- data.frame(year, rank)
cbind(top.5.salaries, more.cols)
top.5.salaries <- as.data.frame(load("./data/top.5.salarios.RData"))
year <- c(2008,2008,2008,2008,2022)
rank <- c(1,2,3,4,5)
more.cols <- data.frame(year, rank)
cbind(top.5.salaries, more.cols)
salarios = c(15000,18000,20000,12000,45200)
posicion = c("Q4", "Q3", "Q2", "Q1", "Q5")
equipo = c("colts", "patriots", "panthers", "bengals", "giants")
nombre = c("jorge", "rafael", "miguel", "angel", "luis")
apellido = c("callejo", "flores", "guisbert", "tarqui", "linares")
top.5.salarios <- data.frame(nombre, apellido, equipo, posicion, salarios)
top.5.salarios
salarios = c(15000,18000,20000,12000,45200)
posicion = c("Q4", "Q3", "Q2", "Q1", "Q5")
equipo = c("colts", "patriots", "panthers", "bengals", "giants")
nombre = c("jorge", "rafael", "miguel", "angel", "luis")
apellido = c("callejo", "flores", "guisbert", "tarqui", "linares")
top.5.salarios <- data.frame(nombre, apellido, equipo, posicion, salarios)
top.5.salarios
cbind(top.5.salarios, more.cols)
year <- c(2008,2008,2008,2008,2022)
rank <- c(1,2,3,4,5)
more.cols <- data.frame(year, rank)
cbind(top.5.salarios, more.cols)
dbListFields(con, "Batting")
dbListFields(con,"Master")
dbListFields(con,"Master")
db <- dbListFields(con,"Master")
View(db)
load("C:/Users/Administrador/Desktop/R_in_a_Nutshell/.RData")
x <- 1:20
dim(x) <- c(5,4)
x
apply(x, 1, FUN = max)
apply(X=x, MARGIN = 2, FUN = max)
apply(x, 1, FUN = min)
apply(x, 2, FUN = min)
dim(x)<- c(3,3,3)
x
x <- 1:27
dim(x)<- c(3,3,3)
x
apply(x, , 1, FUN = paste, collapse = ",")
apply(x, 1, FUN = paste, collapse = ",")
apply(x, 2, FUN = paste, collapse = ",")
apply(x, 3, FUN = paste, collapse = ",")
apply(x, 1, FUN = paste, collapse = "0")
apply(x, 2, FUN = paste, collapse = "0")
apply(x, 3, FUN = paste, collapse = "0")
apply(x, c(1,2), FUN = paste, collapse = ",")
x
x <- as.list(1:5)
x
lapply(x, function(x){2^x})
lapply(x, function(x){return(exp(x))})
y <- data.frame(x=1:5, y= 6:10)
y
lapply(y, function(y){sqrt(x)})
lapply(y, function(y){sqrt(y)})
lapply(y, function(y){return(exp(x) * y)})
lapply(c(x,y), function(x,y){return(exp(x) * y)})
lapply(y, function(y){range(y)})
lapply(y, function(y){return(2^y)})
mapply(paste, c(1,2,3,4,5),
c(11,22,33,44,55),
c(111,222,333,444,555),
MoreArgs = list(sep="|"))
title <- c("ARRAY OUTPUT", "DATAFRAME OUTPUT", "LIST OUTPUT", "DISCARD OUTPUT")
title <- c("INPUT","ARRAY OUTPUT", "DATAFRAME OUTPUT", "LIST OUTPUT", "DISCARD OUTPUT")
arr <- c("aaply", "adply", "alply", "a_ply")
dat.fra <- c("Data Frame", "daply", "ddply", "dlply", "d_ply")
lista <- c("List", "laply", "ldply", "llply", "d_ply")
tabla_plyr <- data.frame(title, arr, dat.fra, list)
title <- c("ARRAY OUTPUT", "DATAFRAME OUTPUT", "LIST OUTPUT", "DISCARD OUTPUT")
arr <- c("Array","aaply", "adply", "alply", "a_ply")
dat.fra <- c("Data Frame", "daply", "ddply", "dlply", "d_ply")
lista <- c("List", "laply", "ldply", "llply", "d_ply")
tabla_plyr <- data.frame(title, arr, dat.fra, list)
tabla_plyr <- data.frame(title, arr, dat.fra, lista)
title <- c("INPUT","ARRAY OUTPUT", "DATAFRAME OUTPUT", "LIST OUTPUT", "DISCARD OUTPUT")
arr <- c("Array","aaply", "adply", "alply", "a_ply")
dat.fra <- c("Data Frame", "daply", "ddply", "dlply", "d_ply")
lista <- c("List", "laply", "ldply", "llply", "d_ply")
tabla_plyr <- data.frame(title, arr, dat.fra, lista)
tabla_plyr
x <- c(2,4,6,8,10)
lapply(x, function(x){x+1})
#equivalente is llply
llply(.data =d, .fun = function(x){x+1})
library(pl)
library(plyr)
x <- c(2,4,6,8,10)
lapply(x, function(x){x+1})
#equivalente is llply
llply(.data =d, .fun = function(x){x+1})
#equivalente is llply
llply(.data =d, .fun = function(x)x+1)
#equivalente is llply
llply(.data =x, .fun = function(x)x+1)
apply(x, 1, FUN = paste, collapse = ",")
x <- 1:12
x <- 1:12
dim(x) <- (3,3)
apply(x, 1, FUN = paste, collapse = ",")
x <- 1:12
dim(x) <- c(3,3)
x <- 1:12
dim(x) <- c(3,4)
apply(x, 1, FUN = paste, collapse = ",")
#equivalente aaply
aaply(.data = x, margins = 1, .fun = paste, collapse = ",")
#equivalente aaply
aaply(.data = x, .margins = 1, .fun = paste, collapse = ",")
#data frame  in, matrix out
t(sapply(x, function(x){2^x}))
#equivalent (but note the additional labels)
aaply(d, function(x){x-x}, .margins = 2)
#equivalent (but note the additional labels)
aaply(x, function(x){x-x}, .margins = 2)
x <- seq(2:10)
x
x <- seq(1:10)
x
x <- seq(1:10,2)
x
x <- seq(1:12)
x
shingle(x, intervals = sort(unique(x)))
library(lattice)
shingle(x, intervals = sort(unique(x)))
x <- c(1,1,1,2,2,2,2,2,3,3,3,3,3,3,3,4,5)
x
shingle(x, intervals = sort(unique(x)))
equal.count(x, intervals = max(x))
equal.count(x, intervals = sort(max(x)))
equal.count(x, intervals = sort(unique(x)))
